{"ast":null,"code":"var _jsxFileName = \"D:\\\\Masai\\\\MasaiAssignment\\\\react101\\\\TodoWithDlt\\\\app\\\\src\\\\components\\\\TodoItems.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoItems(props) {\n  _s();\n\n  console.log(\"pros\", props);\n  const {\n    title,\n    handleDlt,\n    id\n  } = props;\n  const [cls, setCls] = useState(\"green\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .red {background-color: red}\n        .green {backgraound-: green}\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cls,\n        onClick: () => setCls(cls => cls.styles === \"red\" ? \"green\" : \"red\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoItems, \"gVOQuPilHU37VIX39Y8t/x/143Q=\");\n\n_c = TodoItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItems\");","map":{"version":3,"names":["React","useState","TodoItems","props","console","log","title","handleDlt","id","cls","setCls","styles"],"sources":["D:/Masai/MasaiAssignment/react101/TodoWithDlt/app/src/components/TodoItems.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\n\r\nexport default function TodoItems(props) {\r\n  console.log(\"pros\",props)\r\n  const {title,handleDlt,id} = props;\r\n  const [cls, setCls] = useState(\"green\");\r\n  return (\r\n    <>\r\n     <style>{`\r\n        .red {background-color: red}\r\n        .green {backgraound-: green}\r\n      `\r\n      }</style>\r\n      <div className='outputDiv'>\r\n      <h3>{title}</h3>\r\n      <button  className={cls} onClick={() => setCls((cls) => (cls.styles === \"red\" ? \"green\" : \"red\"))}></button>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAGA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACvCC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,KAAnB;EACA,MAAM;IAACG,KAAD;IAAOC,SAAP;IAAiBC;EAAjB,IAAuBL,KAA7B;EACA,MAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,OAAD,CAA9B;EACA,oBACE;IAAA,wBACC;MAAA,UAAS;AACd;AACA;AACA;IAHK;MAAA;MAAA;MAAA;IAAA,QADD,eAME;MAAK,SAAS,EAAC,WAAf;MAAA,wBACA;QAAA,UAAKK;MAAL;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAS,SAAS,EAAEG,GAApB;QAAyB,OAAO,EAAE,MAAMC,MAAM,CAAED,GAAD,IAAUA,GAAG,CAACE,MAAJ,KAAe,KAAf,GAAuB,OAAvB,GAAiC,KAA5C;MAA9C;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,gBADF;AAeD;;GAnBuBT,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}